#!/usr/bin/python3
from base64 import b64decode, b64encode
import requests
import threading
import os
url='http://mercury.picoctf.net:43275/'
cookie = "QnNwQnBWd3lHUE10NURlUFpQMEVocXVraWNPR21lcDB1a1lTbEM0UW9VRGJ2L2pHMy9HLzM2Z2gwVFpnb0s2OWZyNW9FYjZVWFZob3B6NGJodzlPNTVhdGtYOWRoTDNDMlIwaFE1OTNVZG1NTUkrVmxtMzl2K2RWWENHVnhHeXE="
command=("cat cookiesFlag.txt|grep -i picoCTF")
def bit_flip(position, bit, cookies):
    raw = b64decode(b64decode(cookies).decode())

    list1 = bytearray(raw)
    list1[position] = list1[position] ^ bit
    raw = bytes(list1)
    return b64encode(b64encode(raw)).decode()

def checkTheFlag(position_one,bit_pos):
		auth_cookie = bit_flip(position_one, bit_pos, cookie)
		cookies = {'auth_name': auth_cookie}
		r = requests.get(url, cookies=cookies)
		print(f"{position_one},{bit_pos} Brute Force...")
		if "picoCTF{" in r.text:
			print(cookies)
			with open("cookiesFlag.txt","w") as flag:
				flag.write(r.text)
			os.system(command)
			os._exit(0)
def foor1():
	for i in range(128):
		for j in range(32):
			checkTheFlag(i,j)
def foor2():
	for i in range(128):
		for j in range(32,64):
			checkTheFlag(i,j)
def foor3():
	for i in range(128):
		for j in range(64,96):
			checkTheFlag(i,j)
def foor4():
	for i in range(128):
		for j in range(96,129):
			checkTheFlag(i,j)
t1=threading.Thread(target=foor1)
t1.start()
t2=threading.Thread(target=foor2)
t2.start()
t3=threading.Thread(target=foor3)
t3.start()
t4=threading.Thread(target=foor4)
t4.start()
